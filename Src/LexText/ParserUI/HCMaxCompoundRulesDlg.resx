<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAAABoBQAAJgAAACAgAAAAAAAAqAgAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAB
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFUAAACqAAAA/wAAAAAkAABVJAAAqiQAAP8kAAAASQAAVUkAAKpJ
        AAD/SQAAAG0AAFVtAACqbQAA/20AAACSAABVkgAAqpIAAP+SAAAAtgAAVbYAAKq2AAD/tgAAANsAAFXb
        AACq2wAA/9sAAAD/AABV/wAAqv8AAP//AAAAACQAVQAkAKoAJAD/ACQAACQkAFUkJACqJCQA/yQkAABJ
        JABVSSQAqkkkAP9JJAAAbSQAVW0kAKptJAD/bSQAAJIkAFWSJACqkiQA/5IkAAC2JABVtiQAqrYkAP+2
        JAAA2yQAVdskAKrbJAD/2yQAAP8kAFX/JACq/yQA//8kAAAASQBVAEkAqgBJAP8ASQAAJEkAVSRJAKok
        SQD/JEkAAElJAFVJSQCqSUkA/0lJAABtSQBVbUkAqm1JAP9tSQAAkkkAVZJJAKqSSQD/kkkAALZJAFW2
        SQCqtkkA/7ZJAADbSQBV20kAqttJAP/bSQAA/0kAVf9JAKr/SQD//0kAAABtAFUAbQCqAG0A/wBtAAAk
        bQBVJG0AqiRtAP8kbQAASW0AVUltAKpJbQD/SW0AAG1tAFVtbQCqbW0A/21tAACSbQBVkm0AqpJtAP+S
        bQAAtm0AVbZtAKq2bQD/tm0AANttAFXbbQCq220A/9ttAAD/bQBV/20Aqv9tAP//bQAAAJIAVQCSAKoA
        kgD/AJIAACSSAFUkkgCqJJIA/ySSAABJkgBVSZIAqkmSAP9JkgAAbZIAVW2SAKptkgD/bZIAAJKSAFWS
        kgCqkpIA/5KSAAC2kgBVtpIAqraSAP+2kgAA25IAVduSAKrbkgD/25IAAP+SAFX/kgCq/5IA//+SAAAA
        tgBVALYAqgC2AP8AtgAAJLYAVSS2AKoktgD/JLYAAEm2AFVJtgCqSbYA/0m2AABttgBVbbYAqm22AP9t
        tgAAkrYAVZK2AKqStgD/krYAALa2AFW2tgCqtrYA/7a2AADbtgBV27YAqtu2AP/btgAA/7YAVf+2AKr/
        tgD//7YAAADbAFUA2wCqANsA/wDbAAAk2wBVJNsAqiTbAP8k2wAASdsAVUnbAKpJ2wD/SdsAAG3bAFVt
        2wCqbdsA/23bAACS2wBVktsAqpLbAP+S2wAAttsAVbbbAKq22wD/ttsAANvbAFXb2wCq29sA/9vbAAD/
        2wBV/9sAqv/bAP//2wAAAP8AVQD/AKoA/wD/AP8AACT/AFUk/wCqJP8A/yT/AABJ/wBVSf8Aqkn/AP9J
        /wAAbf8AVW3/AKpt/wD/bf8AAJL/AFWS/wCqkv8A/5L/AAC2/wBVtv8Aqrb/AP+2/wAA2/8AVdv/AKrb
        /wD/2/8AAP//AFX//wCq//8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbba2tra2
        tra2tra2trYAAG3/AP//////AgL///+2AABt/wD//wAAAC//AAAAtgAAbf8A//8A//8vL////7YAAG3/
        AP//AP//AgL///+2AABt/wD//wAAAC//AAAAtgAAbf8A//8A//8vL////7YAAG3/AP8CAv////////+2
        AABt/wAAL/8AAAAAAAD/tgAAbf8A/y8v/////////7YAAG3/AP////////////+2AAACAgICAgICAgIC
        AgICAgAAA5cvLy8vLy8vLy8vLy8AAAMDAwMDAwMDAwMDAwMDAAD//zExAAExMQABMTEAATExAAExMQAB
        kgoAAZL/AAEAAAABMTEAAZKSAAExMQABMTEAAf//AAEKCgABkv8AAQAAKAAAACAAAABAAAAAAQAIAAAA
        AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVAAAAqgAAAP8AAAAAJAAAVSQAAKokAAD/JAAAAEkAAFVJ
        AACqSQAA/0kAAABtAABVbQAAqm0AAP9tAAAAkgAAVZIAAKqSAAD/kgAAALYAAFW2AACqtgAA/7YAAADb
        AABV2wAAqtsAAP/bAAAA/wAAVf8AAKr/AAD//wAAAAAkAFUAJACqACQA/wAkAAAkJABVJCQAqiQkAP8k
        JAAASSQAVUkkAKpJJAD/SSQAAG0kAFVtJACqbSQA/20kAACSJABVkiQAqpIkAP+SJAAAtiQAVbYkAKq2
        JAD/tiQAANskAFXbJACq2yQA/9skAAD/JABV/yQAqv8kAP//JAAAAEkAVQBJAKoASQD/AEkAACRJAFUk
        SQCqJEkA/yRJAABJSQBVSUkAqklJAP9JSQAAbUkAVW1JAKptSQD/bUkAAJJJAFWSSQCqkkkA/5JJAAC2
        SQBVtkkAqrZJAP+2SQAA20kAVdtJAKrbSQD/20kAAP9JAFX/SQCq/0kA//9JAAAAbQBVAG0AqgBtAP8A
        bQAAJG0AVSRtAKokbQD/JG0AAEltAFVJbQCqSW0A/0ltAABtbQBVbW0Aqm1tAP9tbQAAkm0AVZJtAKqS
        bQD/km0AALZtAFW2bQCqtm0A/7ZtAADbbQBV220AqtttAP/bbQAA/20AVf9tAKr/bQD//20AAACSAFUA
        kgCqAJIA/wCSAAAkkgBVJJIAqiSSAP8kkgAASZIAVUmSAKpJkgD/SZIAAG2SAFVtkgCqbZIA/22SAACS
        kgBVkpIAqpKSAP+SkgAAtpIAVbaSAKq2kgD/tpIAANuSAFXbkgCq25IA/9uSAAD/kgBV/5IAqv+SAP//
        kgAAALYAVQC2AKoAtgD/ALYAACS2AFUktgCqJLYA/yS2AABJtgBVSbYAqkm2AP9JtgAAbbYAVW22AKpt
        tgD/bbYAAJK2AFWStgCqkrYA/5K2AAC2tgBVtrYAqra2AP+2tgAA27YAVdu2AKrbtgD/27YAAP+2AFX/
        tgCq/7YA//+2AAAA2wBVANsAqgDbAP8A2wAAJNsAVSTbAKok2wD/JNsAAEnbAFVJ2wCqSdsA/0nbAABt
        2wBVbdsAqm3bAP9t2wAAktsAVZLbAKqS2wD/ktsAALbbAFW22wCqttsA/7bbAADb2wBV29sAqtvbAP/b
        2wAA/9sAVf/bAKr/2wD//9sAAAD/AFUA/wCqAP8A/wD/AAAk/wBVJP8AqiT/AP8k/wAASf8AVUn/AKpJ
        /wD/Sf8AAG3/AFVt/wCqbf8A/23/AACS/wBVkv8AqpL/AP+S/wAAtv8AVbb/AKq2/wD/tv8AANv/AFXb
        /wCq2/8A/9v/AAD//wBV//8Aqv//AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAktra2tra2tra2tra2tra2tra2tra2tra
        2traAAAAAACS/////wD//////////////////////////9oAAAAAAJL/////AP//////////////////
        ////////2gAAAAAAkv////8A//////////8CAgIC///////////aAAAAAACS/////wD//////////y//
        /wP//////////9oAAAAAAJL/////AP////8AAAAAL///A/8AAAAAAAD/2gAAAAAAkv////8A/////wD/
        //8vLy8D///////////aAAAAAACS/////wD/////AP///////////////////9oAAAAAAJL/////AP//
        //8A////////////////////2gAAAAAAkv////8A/////wD///8CAgIC///////////aAAAAAACS////
        /wD/////AP///y///wP//////////9oAAAAAAJL/////AP////8AAAAAL///A/8AAAAAAAD/2gAAAAAA
        kv////8A/////wD///8vLy8D///////////aAAAAAACS/////wD/////AP///////////////////9oA
        AAAAAJL/////AP////8A////////////////////2gAAAAAAkv////8A//8CAgIC////////////////
        ///aAAAAAACS/////wD//y///wP//////////////////9oAAAAAAJL/////AAAAL///A/8AAAAAAAAA
        AAAA////2gAAAAAAkv////8A//8vLy8D///////////////////aAAAAAACS/////wD/////////////
        /////////////9oAAAAAAJL/////AP//////////////////////////2gAAAAAAkv//////////////
        ///////////////////aAAAAAAACAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAAAMzMy8vLy8v
        Ly8vLy8vLy8vLy8vLy8vLy8vLwAAAAAAAzMzLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vAAAAAAADAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////////////wAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAAD//////////8=
</value>
  </data>
</root>